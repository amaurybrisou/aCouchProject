{
	"id": "d564ab5f-837e-f486-f56f-0c3c8b2babb4",
	"name": "Crcl",
	"description": "Country Language City Region Zato Module Tests",
	"order": [
		"ebb86aa5-6d3e-b43a-7e6f-e34f2d2f6730",
		"84001fe7-4c55-881a-dd22-5dd496fc33a5",
		"5bce13f6-e3cf-bfff-b823-afcb1c423406",
		"5f8d8f79-067d-485e-7f6d-977a5ec1985d",
		"97ed4d59-2815-1886-7ff3-e6e940f5d037",
		"e09f655e-b93f-c622-b488-56c6fd5c9c0d",
		"244fdece-982d-622c-911a-4c39d90e358e",
		"a8d37e90-13a2-81ac-dba5-20ac526aa946",
		"340a8392-66d4-e703-79ce-8977390d5f41"
	],
	"folders": [],
	"timestamp": 1409314306622,
	"synced": false,
	"requests": [
		{
			"id": "244fdece-982d-622c-911a-4c39d90e358e",
			"headers": "Authorization: Basic YUNvdWNoOmFiYw==\n",
			"url": "http://localhost:11223/crcl/country/regions?name=France",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Response time is less than 200ms\"] = responseTime < 200;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nvar schema = {\n  'type': 'object',\n  'required': ['response'],\n  'properties': {\n    'required': ['result'],\n    'response': {\n      'type': 'object',\n      'properties': {\n        'result': {\n          'minItems': 1,\n          'type': 'array',\n          'uniqueItems': true,\n          'items': {\n            'type': 'object',\n            'properties': {\n              'id': {\n                'type': 'number',\n                'minimum': 0,\n                'exclusiveMinimum': true\n              },\n              'name': {\n                'type': 'string'\n              },\n              'code': {\n                'pattern': '^[A-Z]{2}$',\n                'type': 'string'\n              },\n              'adm1ode': {\n                'type': 'string'\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\ntests['Response Body is Ok'] = tv4.validate(data, schema);\n\n\n\n\n",
			"time": 1409474139294,
			"name": "Get Country Regions by countryName",
			"description": "Get Country regions by countryName",
			"collectionId": "d564ab5f-837e-f486-f56f-0c3c8b2babb4",
			"synced": false
		},
		{
			"id": "340a8392-66d4-e703-79ce-8977390d5f41",
			"headers": "Authorization: Basic YUNvdWNoOmFiYw==\n",
			"url": "http://localhost:11223/crcl/country/cities?name=France",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Response time is less than 200ms\"] = responseTime < 200;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nvar schema = {\n  'type': 'object',\n  'required': ['response'],\n  'properties': {\n    'required': ['result'],\n    'response': {\n      'type': 'object',\n      'properties': {\n        'result': {\n          'type': 'array',\n          'uniqueItems': true,\n          'items': {\n            'type': 'object',\n            'properties': {\n              'id': {\n                'type': 'number',\n                'minimum': 0,\n                'exclusiveMinimum': true\n              },\n              'name': {\n                'type': 'string'\n              },\n              'dma_id': {\n                'type': 'integer' \n              },\n              'latitude': {\n                'type': 'number'\n              },\n              'longitude': {\n                'type': 'number' \n              },\n            }\n          }\n        }\n      }\n    }\n  }\n};\ntests['Response Body is Ok'] = tv4.validate(data, schema);\n\n\n\n\n",
			"time": 1409480176987,
			"name": "Get Country cities by countryName",
			"description": "Get Country cities by countryName",
			"collectionId": "d564ab5f-837e-f486-f56f-0c3c8b2babb4",
			"synced": false
		},
		{
			"id": "5bce13f6-e3cf-bfff-b823-afcb1c423406",
			"headers": "Authorization: Basic YUNvdWNoOmFiYw==\n",
			"url": "http://localhost:11223/crcl/country?id=2",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Response time is less than 200ms\"] = responseTime < 200;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nvar schema = {\n  'type': 'object',\n  'required': ['response'],\n  'properties': {\n    'required': ['result'],\n    'response': {\n      'type': 'object',\n      'properties': {\n        'result': {\n          'type': 'object',\n          'properties': {\n            'type': 'object',\n            'required': ['id'],\n            'properties': {\n              'id': {\n                'type': 'number',\n                'minimum': 0,\n                'exclusiveMinimum': true\n              },\n              'name': {\n                'type': 'string'\n              },\n              'fips104': {\n                'type': 'string'\n              },\n              'iso2': {\n                'pattern': '^[A-Z]{2}$|-{2}$',\n                'type': 'string'\n              },\n              'iso3': {\n                'pattern': '^[A-Z]{3}$|^-{2}$',\n                'type': 'string'\n              },\n              'ison': {\n                'pattern': '^[0-9]{1,3}$|^-{2}$',\n                'type': 'string'\n              },\n              'internet': {\n                'pattern': '^[A-Z]{2}$|-{2}$',\n                'type': 'string'\n              },\n              'capital': {\n                'type': 'string'\n              },\n              'mapreference': {\n                'type': 'string'\n              },\n              'nationality_singular': {\n                'type': 'string'\n              },\n              'nationality_plural': {\n                'type': 'string'\n              },\n              'currency': {\n                'type': 'string'\n              },\n              'currency_code': {\n                'type': 'string'\n              },\n              'population': {\n                'type': 'number'\n              },\n              'title': {\n                'type': 'string'\n              },\n              'comment': {\n                'type': 'string'\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\ntests['Response Body is Ok'] = tv4.validate(data, schema);\n\n\n\n\n",
			"time": 1409365559531,
			"name": "Get Country by Id",
			"description": "Get Country by Id",
			"collectionId": "d564ab5f-837e-f486-f56f-0c3c8b2babb4",
			"synced": false
		},
		{
			"id": "5f8d8f79-067d-485e-7f6d-977a5ec1985d",
			"headers": "Authorization: Basic YUNvdWNoOmFiYw==\n",
			"url": "http://localhost:11223/crcl/country/languages?id=1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Response time is less than 200ms\"] = responseTime < 200;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nvar schema = {\n  'type': 'object',\n  'required': ['response'],\n  'properties': {\n    'required': ['result'],\n    'response': {\n      'type': 'object',\n      'properties': {\n        'result': {\n          'minItems': 1,\n          'type': 'array',\n          'uniqueItems': true,\n          'items': {\n            'type': 'object',\n            'properties': {\n              'id': {\n                'type': 'integer',\n                'minimum': 0,\n                'exclusiveMinimum': true\n              },\n              'name': {\n                'type': 'string'\n              },\n              'native_name': {\n                'type': 'string'\n              },\n              'speakers': {\n                'type': 'number'\n              },\n              'percentage': {\n                'type': 'number'\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\ntests['Response Body is Ok'] = tv4.validate(data, schema);\n\n\n\n\n",
			"time": 1409480210671,
			"name": "Get Country Languages by countryId",
			"description": "Get Country languages by countryId",
			"collectionId": "d564ab5f-837e-f486-f56f-0c3c8b2babb4",
			"synced": false
		},
		{
			"id": "84001fe7-4c55-881a-dd22-5dd496fc33a5",
			"headers": "Authorization: Basic YUNvdWNoOmFiYw==\n",
			"url": "http://localhost:11223/crcl/country?name=France",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Response time is less than 200ms\"] = responseTime < 200;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nvar schema = {\n  'type': 'object',\n  'required': ['response'],\n  'properties': {\n    'required': ['result'],\n    'response': {\n      'type': 'object',\n      'properties': {\n        'result': {\n          'type': 'object',\n          'properties': {\n            'type': 'object',\n            'required': ['id'],\n            'properties': {\n              'id': {\n                'type': 'number',\n                'minimum': 0,\n                'exclusiveMinimum': true\n              },\n              'name': {\n                'type': 'string'\n              },\n              'fips104': {\n                'type': 'string'\n              },\n              'iso2': {\n                'pattern': '^[A-Z]{2}$|-{2}$',\n                'type': 'string'\n              },\n              'iso3': {\n                'pattern': '^[A-Z]{3}$|^-{2}$',\n                'type': 'string'\n              },\n              'ison': {\n                'pattern': '^[0-9]{1,3}$|^-{2}$',\n                'type': 'string'\n              },\n              'internet': {\n                'pattern': '^[A-Z]{2}$|-{2}$',\n                'type': 'string'\n              },\n              'capital': {\n                'type': 'string'\n              },\n              'mapreference': {\n                'type': 'string'\n              },\n              'nationality_singular': {\n                'type': 'string'\n              },\n              'nationality_plural': {\n                'type': 'string'\n              },\n              'currency': {\n                'type': 'string'\n              },\n              'currency_code': {\n                'type': 'string'\n              },\n              'population': {\n                'type': 'number'\n              },\n              'title': {\n                'type': 'string'\n              },\n              'comment': {\n                'type': 'string'\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\n\ntests['Response Body is Ok'] = tv4.validate(data, schema);\n\n\n\n\n",
			"time": 1409365550935,
			"name": "Get Country by Name",
			"description": "Get Country by Name",
			"collectionId": "d564ab5f-837e-f486-f56f-0c3c8b2babb4",
			"synced": false
		},
		{
			"id": "97ed4d59-2815-1886-7ff3-e6e940f5d037",
			"headers": "Authorization: Basic YUNvdWNoOmFiYw==\n",
			"url": "http://localhost:11223/crcl/country/languages?name=France",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Response time is less than 200ms\"] = responseTime < 200;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nvar schema = {\n  'type': 'object',\n  'required': ['response'],\n  'properties': {\n    'required': ['result'],\n    'response': {\n      'type': 'object',\n      'properties': {\n        'result': {\n          'minItems': 1,\n          'type': 'array',\n          'uniqueItems': true,\n          'items': {\n            'type': 'object',\n            'properties': {\n              'id': {\n                'type': 'integer',\n                'minimum': 0,\n                'exclusiveMinimum': true\n              },\n              'name': {\n                'type': 'string'\n              },\n              'native_name': {\n                'type': 'string'\n              },\n              'speakers': {\n                'type': 'number'\n              },\n              'percentage': {\n                'type': 'number'\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\ntests['Response Body is Ok'] = tv4.validate(data, schema);\n\n\n\n\n",
			"time": 1409480218796,
			"name": "Get Country Languages by countryName",
			"description": "Get Country languages by countryName",
			"collectionId": "d564ab5f-837e-f486-f56f-0c3c8b2babb4",
			"synced": false
		},
		{
			"id": "a8d37e90-13a2-81ac-dba5-20ac526aa946",
			"headers": "Authorization: Basic YUNvdWNoOmFiYw==\n",
			"url": "http://localhost:11223/crcl/country/cities?id=82",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Response time is less than 200ms\"] = responseTime < 200;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nvar schema = {\n  'type': 'object',\n  'required': ['response'],\n  'properties': {\n    'required': ['result'],\n    'response': {\n      'type': 'object',\n      'properties': {\n        'result': {\n          'type': 'array',\n          'uniqueItems': true,\n          'items': {\n            'type': 'object',\n            'required': ['id'],\n            'properties': {\n              'id': {\n                'type': 'number',\n                'minimum': 0,\n                'exclusiveMinimum': true\n              },\n              'name': {\n                'type': 'string'\n              },\n              'dma_id': {\n                'type': 'integer' \n              },\n              'latitude': {\n                'type': 'number'\n              },\n              'longitude': {\n                'type': 'number' \n              },\n            }\n          }\n        }\n      }\n    }\n  }\n};\ntests['Response Body is Ok'] = tv4.validate(data, schema);\n\n\n\n\n",
			"time": 1409480189945,
			"name": "Get Country cities by countryId",
			"description": "Get Country cities by countryId",
			"collectionId": "d564ab5f-837e-f486-f56f-0c3c8b2babb4",
			"synced": false
		},
		{
			"id": "e09f655e-b93f-c622-b488-56c6fd5c9c0d",
			"headers": "Authorization: Basic YUNvdWNoOmFiYw==\n",
			"url": "http://localhost:11223/crcl/country/regions?id=82",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Response time is less than 200ms\"] = responseTime < 200;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nvar schema = {\n  'type': 'object',\n  'required': ['response'],\n  'properties': {\n    'required': ['result'],\n    'response': {\n      'type': 'object',\n      'properties': {\n        'result': {\n          'minItems': 1,\n          'type': 'array',\n          'uniqueItems': true,\n          'items': {\n            'type': 'object',\n            'properties': {\n              'id': {\n                'type': 'number',\n                'minimum': 0,\n                'exclusiveMinimum': true\n              },\n              'name': {\n                'type': 'string'\n              },\n              'code': {\n                'pattern': '^[A-Z]{2}$',\n                'type': 'string'\n              },\n              'adm1ode': {\n                'type': 'string'\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\ntests['Response Body is Ok'] = tv4.validate(data, schema);\n\n\n\n\n",
			"time": 1409474173730,
			"name": "Get Country Regions by countryId",
			"description": "Get Country regions by countryId",
			"collectionId": "d564ab5f-837e-f486-f56f-0c3c8b2babb4",
			"synced": false
		},
		{
			"id": "ebb86aa5-6d3e-b43a-7e6f-e34f2d2f6730",
			"headers": "Authorization: Basic YUNvdWNoOmFiYw==\n",
			"url": "http://localhost:11223/crcl/countries",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests['Response time is less than 200ms'] = responseTime < 200;\n\ntests['Status code is 200'] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nvar schema = {\n  'type': 'object',\n  'required': ['response'],\n  'properties': {\n    'required': ['result'],\n    'response': {\n      'type': 'object',\n      'properties': {\n        'result': {\n          'minItems': 275,\n          'maxItems': 275,\n          'type': 'array',\n          'uniqueItems': true,\n          'items': {\n            'type': 'object',\n            'required': ['id'],\n            'properties': {\n              'id': {\n                'type': 'number',\n                'minimum': 0,\n                'exclusiveMinimum': true\n              },\n              'name': {\n                'type': 'string'\n              },\n              'fips104': {\n                'type': 'string'\n              },\n              'iso2': {\n                'pattern': '^[A-Z]{2}$|-{2}$',\n                'type': 'string'\n              },\n              'iso3': {\n                'pattern': '^[A-Z]{3}$|^-{2}$',\n                'type': 'string'\n              },\n              'ison': {\n                'pattern': '^[0-9]{1,3}$|^-{2}$',\n                'type': 'string'\n              },\n              'internet': {\n                'pattern': '^[A-Z]{2}$|-{2}$',\n                'type': 'string'\n              },\n              'capital': {\n                'type': 'string'\n              },\n              'mapreference': {\n                'type': 'string'\n              },\n              'nationality_singular': {\n                'type': 'string'\n              },\n              'nationality_plural': {\n                'type': 'string'\n              },\n              'currency': {\n                'type': 'string'\n              },\n              'currency_code': {\n                'type': 'string'\n              },\n              'population': {\n                'type': 'number'\n              },\n              'title': {\n                'type': 'string'\n              },\n              'comment': {\n                'type': 'string'\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n};\n\ntests['Response Body is Ok'] = tv4.validate(data, schema);",
			"time": 1409365255368,
			"name": "Countries Get All",
			"description": "get All Countries in the Database",
			"collectionId": "d564ab5f-837e-f486-f56f-0c3c8b2babb4",
			"synced": false
		}
	]
}